<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       					   http://www.springframework.org/schema/beans/spring-beans.xsd
       					   http://www.springframework.org/schema/tx 
       					   http://www.springframework.org/schema/tx/spring-tx.xsd
       					   http://www.springframework.org/schema/aop 
       					   http://www.springframework.org/schema/aop/spring-aop.xsd
       					   http://www.springframework.org/schema/context 
       					   http://www.springframework.org/schema/context/spring-context.xsd">
	
	
	<!--数据源 -->
	<!-- 公共配置项 -->
    <context:property-placeholder location="classpath:jdbcInfo.properties"/>
    
    
	
	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	
	<!-- 配置sessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<!--spring整合hibernate的工厂bean  -->
		<property name="dataSource" ref="dataSource"></property>
        <property name="hibernateProperties">
        	<props>
        		<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
        		<prop key="hibernate.show_sql">true</prop>
        		<prop key="hibernate.format_sql">true</prop>
        	</props>
        </property>
        <!-- 注入hibernate映射文件 -->
        <property name="mappingDirectoryLocations">
        	<list>
        		<value>classpath:com/bos/domain</value>
        	</list>
        </property>
    </bean>  
	
	<!--事务管理器  -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!--组件扫描 -->
	<context:component-scan base-package="com.bos"/>
	<!--引入注解解析器  -->
	<context:annotation-config/>
	<!--事务注解  -->
	<tx:annotation-driven/>
	
	
	<!--配置远程服务的代理对象 -->
	<bean id="customerService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
		
		<property name="serviceInterface" value="com.crm.CustomerService"/>
		<!-- 服务访问地址 -->
		<property name="serviceUrl" value="http://localhost:8080/crm/remoting/customer"/>
	</bean>
	
	<!-- 配置一个工厂bean，用于创建shiro框架的过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 注入安全管理器 -->
		<property name="securityManager" ref="securityManager"></property>
		<!-- 设置当前系统的登录页面 -->
		<property name="loginUrl" value="/login.jsp"></property>
		<!-- 登录成功后页面 -->
		<property name="successUrl" value="/index.jsp"></property>
		<!-- 注入权限不足提示页面 -->
		<property name="unauthorizedUrl" value="/unauthorizedUrl.jsp"/>
		<!--注入URL拦截规则  -->
		<property name="filterChainDefinitions">
			<value>
				/css/** = anon
				/images/** = anon
				/js/** = anon
				/login.jsp* = anon
				/validatecode.jsp* = anon
				/userAction_login.action = anon
				/page_base_staff.action = perms["staff"]
				/* = authc<!-- 认证登录的拦截器 -->
			</value>
		</property>
	</bean>
	
	<!-- 注册自定义realm -->
	<bean id="bosRealm" class="com.bos.shiro.BOSRealm"></bean>
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 注入realm -->
		<property name="realm" ref="bosRealm"></property>
	</bean>
	
	<!-- 开启shiro的注解 -->
	<!-- 自动代理 -->
	<bean id="defaultAdvisorAutoProxyCreator" 
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
		<!--强制使用cglib创建action的代理对象 -->
		<property name="proxyTargetClass" value="true"></property>
	</bean>
	
	<!-- 切面类 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"></bean>
</beans>